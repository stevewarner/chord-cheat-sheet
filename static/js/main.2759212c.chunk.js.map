{"version":3,"sources":["components/Sidebar.js","components/Select.js","components/Title.js","components/ChordRows.js","pages/ChordView.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarContainer","styled","div","Title","h1","Button","button","props","active","css","Sidebar","currentMode","selectMode","Modes","className","map","mode","type","onClick","toString","StyledSelect","select","Select","value","onChange","dropdownOptions","e","target","selected","MobileTitle","Header","noteValue","setNoteValue","noteOptions","modeValue","setModeValue","modeOptions","Row","Card","hidden","ChordRows","notes","secondaryDominants","diatonicNotes","i","intervals","length","push","console","log","Object","keys","patterns","pattern","chord","index","degrees","degree","FlexContainer","Main","ModesData","modes","ChordView","useState","shuffledNotes","indexOf","shift","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2759212c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst SidebarContainer = styled.div`\n  color: #fff;\n  background-color: #282c34;\n  width: 20vw;\n  padding: 0 20px;\n  .modes {\n    display: flex;\n    flex-direction: column;\n  }\n  @media (orientation: portrait) {\n    display: none;\n  }\n`;\n\nconst Title = styled.h1`\n  padding: 10px 20px;\n  transform: skew(0deg, -10deg);\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  text-transform: capitalize;\n  background: none;\n  color: #fff;\n  outline: 0;\n  border: none;\n  padding: 8px;\n  margin-left: 16px;\n  text-align: start;\n  font-size: 16px;\n  transition: ease background-color 250ms;\n  cursor: pointer;\n  &:hover {\n    background-color: #5b616b;\n  }\n  &:focus {\n    background-color: #5b616b;\n    outline: -webkit-focus-ring-color auto 1px;\n  }\n\n  ${(props) =>\n    props.active &&\n    css`\n      background: #5b616b;\n    `}\n`;\n\nconst Sidebar = (props) => {\n  const { currentMode, selectMode, Modes } = props;\n  return (\n    <SidebarContainer>\n      <Title>\n        chord\n        <br />\n        cheat\n        <br />\n        sheet\n      </Title>\n      <div className=\"modes\">\n        {Modes.map((mode) => (\n          <Button\n            type=\"button\"\n            onClick={() => selectMode(mode)}\n            key={mode.toString()}\n            active={currentMode === mode}\n          >\n            {mode}\n          </Button>\n        ))}\n      </div>\n    </SidebarContainer>\n  );\n};\n\nSidebar.propTypes = {\n  currentMode: PropTypes.string,\n  selectMode: PropTypes.func,\n  Modes: PropTypes.array,\n};\n\nexport default Sidebar;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled.select`\n  height: 30px;\n  margin: 8px;\n`;\n\nconst Select = (props) => {\n  const { value, onChange, dropdownOptions } = props;\n  return (\n    <StyledSelect value={value} onChange={(e) => onChange(e.target.value)}>\n      {dropdownOptions.map((selected) => (\n        <option key={selected} value={selected}>\n          {selected}\n        </option>\n      ))}\n    </StyledSelect>\n  );\n};\n\nSelect.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  dropdownOptions: PropTypes.array,\n};\n\nexport default Select;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Select from './Select';\n\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n  @media (orientation: portrait) {\n    display: none;\n  }\n`;\n\nconst MobileTitle = styled.div`\n  display: none;\n  @media (orientation: portrait) {\n    display: block;\n    padding: 10px 20px;\n    background-color: #282c34;\n    color: #fff;\n    text-align: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst Header = (props) => {\n  const {\n    noteValue,\n    setNoteValue,\n    noteOptions,\n    modeValue,\n    setModeValue,\n    modeOptions,\n  } = props;\n  return (\n    <>\n      <Title>\n        in\n        <span>\n          <Select\n            value={noteValue}\n            onChange={setNoteValue}\n            dropdownOptions={noteOptions}\n          />\n        </span>\n        {modeValue} you can play...\n      </Title>\n      <MobileTitle>\n        <h1>chord cheat sheet</h1>\n        <Select\n          value={noteValue}\n          onChange={setNoteValue}\n          dropdownOptions={noteOptions}\n        />\n        <Select\n          value={modeValue}\n          onChange={setModeValue}\n          dropdownOptions={modeOptions}\n        />\n      </MobileTitle>\n    </>\n  );\n};\n\nHeader.propTypes = {\n  noteValue: PropTypes.string,\n  setNoteValue: PropTypes.func,\n  noteOptions: PropTypes.array,\n  modeValue: PropTypes.string,\n  setModeValue: PropTypes.func,\n  modeOptions: PropTypes.array,\n};\n\nexport default Header;\n","/* eslint-disable no-plusplus */\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  @media (orientation: portrait) {\n    display: flex;\n    flex-flow: row wrap;\n  }\n`;\n\nconst Card = styled.div`\n  border: solid 1px #282c34;\n  border-radius: 4px;\n  padding: 0 16px;\n  margin: 4px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  p:first-of-type {\n    margin-top: 16px;\n  }\n  p {\n    margin: 0 0 16px 0;\n  }\n  ${(props) =>\n    props.hidden &&\n    css`\n      border: 1px solid transparent;\n      * {\n        display: none;\n      }\n    `}\n  @media (orientation: portrait) {\n    width: calc(100% / 7);\n  }\n`;\n\nconst ChordRows = (props) => {\n  const { mode, notes, secondaryDominants } = props;\n  const diatonicNotes = [];\n  for (let i = 0; i < mode.intervals.length; i++) {\n    diatonicNotes.push(notes[mode.intervals[i]]);\n  }\n  console.log(diatonicNotes);\n  return (\n    <>\n      {Object.keys(mode.patterns).map((pattern) => (\n        <div key={pattern}>\n          <h2>{`${pattern} Chords`}</h2>\n          <Row>\n            {mode.patterns[pattern].map((chord, index) => (\n              // chord component\n              <Card\n                key={index}\n                hidden={chord === 'none'}\n                // className={`card ${chord === 'none' ? 'hidden' : ''}`}\n              >\n                <p>{mode.degrees[index]}</p>\n                <p>{`${diatonicNotes[index]}${chord}`}</p>\n                {/* <p>{mode.structure[index]}</p> */}\n                <p>\n                  {pattern !== 'extended'\n                    ? `${diatonicNotes[index + 0]}, ${\n                        diatonicNotes[index + 2 >= 7 ? index - 5 : index + 2]\n                      }, ${\n                        diatonicNotes[index + 4 >= 7 ? index - 3 : index + 4]\n                      }`\n                    : ''}\n                  {pattern === 'seventh'\n                    ? `, \n                ${diatonicNotes[index + 6 >= 7 ? index - 1 : index + 6]}`\n                    : ''}\n                </p>\n              </Card>\n            ))}\n          </Row>\n        </div>\n      ))}\n      <h2>Secondary Dominant Chords</h2>\n      <Row>\n        {mode.degrees.map((degree, index) => (\n          <Card\n            key={index}\n            hidden={degree === 'none'}\n            // className={`card ${degree === 'none' ? 'hidden' : ''}`}\n          >\n            <p>{index === 0 ? 'V7' : `V/${mode.degrees[index]}`}</p>\n            <p>{`${secondaryDominants[mode.intervals[index]]}7`}</p>\n          </Card>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nChordRows.propTypes = {\n  mode: PropTypes.object,\n  notes: PropTypes.array,\n  secondaryDominants: PropTypes.array,\n};\n\nexport default ChordRows;\n","/* eslint-disable no-plusplus */\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport Sidebar from '../components/Sidebar';\nimport ModesData from '../modes-data.json';\nimport Header from '../components/Title';\nimport ChordRows from '../components/ChordRows';\n\nconst FlexContainer = styled.div`\n  display: flex;\n`;\n\nconst Main = styled.div`\n  color: #282c34;\n  background-color: #fff;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 20px;\n  h2 {\n    text-transform: capitalize;\n  }\n  @media (orientation: portrait) {\n    margin-top: 130px;\n  }\n`;\n\nconst { notes, modes } = ModesData;\n\nconst ChordView = () => {\n  const [noteValue, setNoteValue] = useState('C');\n  const [modeValue, setModeValue] = useState('ionian');\n\n  const noteOptions = [...notes];\n  const secondaryDominants = [...notes];\n  const shuffledNotes = [...notes];\n\n  for (let i = 0; i < notes.indexOf(noteValue); i++) {\n    shuffledNotes.push(shuffledNotes.shift());\n  }\n\n  for (let i = 0; i < notes.indexOf(noteValue) + 7; i++) {\n    secondaryDominants.push(secondaryDominants.shift());\n  }\n\n  return (\n    <FlexContainer>\n      <Sidebar\n        currentMode={modeValue}\n        selectMode={setModeValue}\n        Modes={Object.keys(modes)}\n      />\n      <Main>\n        <Header\n          noteValue={noteValue}\n          setNoteValue={setNoteValue}\n          noteOptions={noteOptions}\n          modeValue={modeValue}\n          setModeValue={setModeValue}\n          modeOptions={Object.keys(modes)}\n        />\n        <ChordRows\n          mode={modes[modeValue]}\n          notes={shuffledNotes}\n          secondaryDominants={secondaryDominants}\n        />\n      </Main>\n    </FlexContainer>\n  );\n};\n\nexport default ChordView;\n","import ChordView from './pages/ChordView';\n\nconst App = () => <ChordView />;\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}